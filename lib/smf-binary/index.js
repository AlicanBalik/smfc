//var async = require('async');
var fs = require('fs');
var mkdirp = require('mkdirp');
var parsers = require('./parse');
var json_attr = require('./data/attributes.json');
//var smfData = require('./data/smfData.json');
var utility = require('../utility');
var killProcess = utility.killProcess;
var generateUUID = utility.generateUUID;
//var des3v2 = require('../3des-v2');
var Des3 = require('../3des');

function getSmfBinaryStructure() {
	return [{ // 0
		'4.3': {
			'data': '000F42400000000D020606060B0C06080B08080808',
			'splash': '000F424000000008020606060B0C0608'
		},
		'4.4': {
			'data': '000F42400000000A020B0C06080B08080808',
			'splash': '000F424000000005020B0C0608'
		}
	}, { // 1
		//this is actually skipped, here for reference. This part is dynamically created
		'4.4': {
			'both': '0017687474703A2F2F7777772E736D617274666163652E696F000E536D617274666163652044656D6F0001300005312E302E3000000000000000000027303175383165336350356C69646C3148524A3535686F4248304E355F4B6D6C766B753445495967000000000000000000023530000000',
			'data': '1E323738384638464135444534333632423344413232453339454245393744',
			'splash': '1F38394542303439413342333439393639433931424444393931454343443741'
		}
		//these are different why?
		//'data': '1E323738384638464135444534333632423344413232453339454245393744',
		//'splash': '1F38394542303439413342333439393639433931424444393931454343443741'
	}, { // 2
		'4.3': {
			'data': '0000000200000000000000000000000000000000FFFFFFFF656D614E0000043800000780000001910000001E0000000044000000000000000000000000000A600000000000000000000300000000020000000B0000000C00000003000000010000000200000003000000000000000200000004000000080000000000000001000000000000000000010700000000000000010000000000000000000107000000000000000100000000000000000001070000000000',
			'splash': '0000000200000000000000000000000000000000FFFFFFFF656D614E0000043800000780000001910000001E0000000044000000000000000000000000000A60000000000000000000030000000000000000030000000100000002000000030000000000000001000000040000000000000001000000000000000000010700000000000000010000000000000000000107000000000000000100000000000000000001070000000000'
		},
		'4.4': {
			'data': '00000000000000000000000000000000FFFFFFFF656D614E000002EE00000536000001460000001E000000004400000000000000000000000000000000000000000000000300000000020000000800000009000000000000000000000002000000010000000500000000',
			'splash': '00000000000000000000000000000000FFFFFFFF656D614E000002EE00000536000001460000001E000000004400000000000000000000000000000000000000000000000300000000000000000000000000000000010000000100000000'
		}
	}, { // 3
		'4.3': {
			'data
			'splash': '0A53706C61736850616765001164656661756C7473706C6173682E706E6700CCC2430000000000000000000000000000043800000780030003020000000100000005000000010000000700094C6F676F496D616765000000640000000000000000200003E8200001F40000000000000003C80F0100000000000000060000000100147265736F75726365733A2F2F6C6F676F2E706E670000000000000001070000000000000001001A53706C617368506167655F53656C665F4F6E53686F772865293B000000010A00000000'
		},
		//starting with SplashPage
		'4.4': {
			'both': '000A53706C61736850616765001164656661756C7473706C6173682E706E6700CCC243000000000000000000000000000002EE00000536030003020000000100000002000000010000000400094C6F676F496D616765000000640000000000000000200003E8200001F40000000000000003C80F0100000000000000030000000100147265736F75726365733A2F2F6C6F676F2E706E670000000000000001070000000000000001001A53706C617368506167655F53656C665F4F6E53686F772865293B000000010A00000000'
		}
	}, { // 4
		//data.smf specific
		'4.4': {
			'data': '0005506167653100000021C1B1000000000000000000000000000002EE00000536216003200000000000000002000000060000000700000001001550616765315F53656C665F4F6E53686F772865293B000000010A0000000000000001001950616765315F53656C665F4F6E4B657950726573732865293B000000021E0000000000000000010019476C6F62616C5F4576656E74735F4F6E53746172742865293B000000011200000000000000010019476C6F62616C5F4576656E74735F4F6E4572726F722865293B000000015700000000'
		}
	}];
}

function createSmfBinaryFiles(confObj, saveDir, callback) {
	var PLAYER_VERSION = '4.4';
	var attributes = json_attr.Application.string[0].attributes;
	var smfObj = getSmfBinaryStructure();

	var configAffectingBuffer = [];
	confObj.UUID = confObj.UUID || generateUUID();
	for (var i = 0; i < attributes.length; i++) {
		var key = attributes[i];
		if (PLAYER_VERSION === '4.4' && (key === 'SESAPIKey' || key === 'SESAPIURL')) {
			continue;
		}
		var buf = parsers.string(confObj[key]);
		configAffectingBuffer.push(buf);
	}
	var hex_str_buf0_data = new Buffer(smfObj[0][PLAYER_VERSION].data, 'hex');
	var hex_str_buf0_splash = new Buffer(smfObj[0][PLAYER_VERSION].splash, 'hex');
	var hex_str_buf1 = Buffer.concat(configAffectingBuffer);
	var hex_str_buf1 = new Buffer(hex_str_buf1, 'hex');
	var hex_str_buf2_data = new Buffer(smfObj[2][PLAYER_VERSION].data, 'hex');
	var hex_str_buf2_splash = new Buffer(smfObj[2][PLAYER_VERSION].splash, 'hex');
	var hex_str_buf3_both = new Buffer(smfObj[3][PLAYER_VERSION].both, 'hex');
	var hex_str_buf4_data = new Buffer(smfObj[4][PLAYER_VERSION].data, 'hex');
	var bufferData = Buffer.concat([hex_str_buf0_data, hex_str_buf1, hex_str_buf2_data, hex_str_buf3_both, hex_str_buf4_data]);
	var bufferSplash = Buffer.concat([hex_str_buf0_splash, hex_str_buf1, hex_str_buf2_splash, hex_str_buf3_both]);

	var des3 = new Des3();
	var encryptKey = des3.createKey();

	fs.writeFile(saveDir + 'data-unencrypted.smf', bufferData, function() {
		fs.writeFile(saveDir + 'splash-unencrypted.smf', bufferSplash, function() {
			des3.encryptFileWith3DES_ECB(saveDir + 'data-unencrypted.smf', encryptKey, saveDir + 'data.smf');
			des3.encryptFileWith3DES_ECB(saveDir + 'splash-unencrypted.smf', encryptKey, saveDir + 'splash.smf');
			//fs.unlinkSync(saveDir + 'data-unencrypted.smf');
			//fs.unlinkSync(saveDir + 'splash-unencrypted.smf');
			callback();
		});
	});
}

function createConfObject(data) {
	var config_json = data.processedArgs.config_json;
	var info = config_json.info;
	var api = config_json.api;
	var fb = api.facebook;
	var tw = api.twitter;
	var gmap = api.googleMaps;
	var confObj = {
		"WS": info.webSite,
		"AppName": info.name,
		"CID": "0",
		"Ver": info.version,
		"FacebookAppUID": fb.appUID,
		"FacebookAppSecret": fb.appSecret,
		"TwitterConsumerKey": tw.consumerKey,
		"TwitterConsumerSecret": tw.consumerSecret,
		"AndroidMapKey": gmap.androidKey,
		"IosGeocodingKey": gmap.iosKey,
		"AdMobPublisherId": api.adMob.publisherId,
		"AndroidProductKey": api.googlePlayServices.inAppPurchaseProductKey,
		"AndroidSenderID": api.googleCloudMessaging.senderID,
		"ApplicationCacheSize": config_json.config.cache.size.toString(),
		// "SESAPIKey": "SES.8obinex.anaLYt1cs201e",
		// "SESAPIURL": "http://analytics.smartface.io/api/AnalyticsData/",
		"LogServerUrl": ""
	};
	return confObj;
}

function create(data, callback) {
	if (data.args.platform !== 'win32') { // worksapce  valid ?!
		var confObj = createConfObject(data);
		var args = data.processedArgs;
		var saveDir;
		if (data.args.task === 'android-full-publish') {
			saveDir = data.androidConfig.androidConfig.input.builder.tmpFolder;
		} else if (data.args.task === 'ios-full-publish') {
			saveDir = data.processedArgs.outputTempFolder;
		}

		mkdirp(saveDir, function(err) {
			if (err) {
				killProcess(err);
			} else {
				createSmfBinaryFiles(confObj, saveDir, callback);
			}
		});
	} else {
		callback();
	}
}

exports.create = create;